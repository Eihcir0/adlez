{"version":3,"sources":["webpack:///webpack/bootstrap d2e289b15f70d0d87829","webpack:///./js/game.js","webpack:///./js/hero.js","webpack:///./js/moveable.js","webpack:///./js/handle_input.js","webpack:///./js/monster.js","webpack:///./js/monster2.js","webpack:///./js/coin.js","webpack:///./js/fireball.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,sBAAsB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iBAAgB,kBAAkB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,qBAAqB;AACrC;AACA;;AAEA,iBAAgB,sBAAsB;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,qBAAqB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA,sBAAqB,qDAAqD;AAC1E;AACA;AACA;AACA,4BAA2B;AAC3B,uCAAsC;AACtC;AACA,8BAA6B;AAC7B,uCAAsC;AACtC;AACA,gBAAe,QAAQ;AACvB,uBAAsB,sCAAsC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA,MAAK;AACL;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB;AACnB;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAqB,qCAAqC;AAC1D;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;;;AAIA;AACA;AACA;;AAEA;;;AAGA,EAAC;;AAED;;;;;;;AC9DA;;AAEA;AACA;AACA,wBAAuB;;;AAGvB,uBAAsB;AACtB;AACA;;AAEA,uBAAsB;AACtB;AACA;;AAEA,uBAAsB;AACtB;;AAEA;;AAEA,uBAAsB;AACtB;AACA;;AAEA,uBAAsB;AACtB;AACA;;AAEA,yCAAwC;AACxC;AACA;;AAEA,yCAAwC;AACxC;AACA;;AAEA,yCAAwC;AACxC;AACA;;AAEA,yCAAwC;AACxC;AACA;AACA,uBAAsB;AACtB;AACA;;;AAGA;;AAEA;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA,MAAK;AACL;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA,MAAK;AACL;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,oBAAmB;AACnB;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA,MAAK;AACL;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA,MAAK;AACL;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d2e289b15f70d0d87829\n **/","\nconst Hero = require('./hero.js');\nconst handleInput = require('./handle_input.js');\nconst Monster = require('./monster.js');\nconst Monster2 = require('./monster2.js');\nconst Coin = require('./coin.js');\nconst Fireball = require('./fireball.js');\n\nvar w = window;\nrequestAnimationFrame = w.webkitRequestAnimationFrame\n|| w.msRequestAnimationFrame || w.mozRequestAnimationFrame;\n\n// Create the canvas\nvar canvas = document.createElement(\"canvas\");\ncanvas.width = 812;\ncanvas.height = 512;\ndocument.body.appendChild(canvas);\nvar ctx = canvas.getContext(\"2d\");\n\n\n\nvar render = function () {\n\n\t// Draw a green background. Pretend it's grass\n\tctx.fillStyle = \"rgb(51, 118, 36)\";\n\tctx.fillRect(330, 0, canvas.width, canvas.height);\n\tctx.fillStyle = \"rgb(250, 250, 250)\";\n\tctx.fillRect(0,0, 330, 512);\n\n\t// Draw hero\n\tctx.drawImage(\n\t\thero.image,\n\t\thero.currentSprite(), hero.spriteVertOffset*hero.height, hero.width, hero.height,\n\t\thero.pos[0], hero.pos[1], hero.width,\n\t\thero.height\n\t);\n\n\tfor (var i = 0; i < fireballs.length; i++) {\n\n\t\tctx.drawImage(\n\t\t\tfireballs[i].image,\n\t\t\tfireballs[i].currentSprite(), fireballs[i].spriteVertOffset*fireballs[i].height, fireballs[i].width, fireballs[i].height,\n\t\t\tfireballs[i].pos[0], fireballs[i].pos[1], fireballs[i].width,\n\t\t\tfireballs[i].height\n\t\t);\n\t}\n\n\n\tfor (var i = 0; i < coins.length; i++) {\n\t\tlet coin = coins[i];\n\n\t\tctx.drawImage(\n\t\t\tcoin.image,\n\t\t\tcoin.currentSprite(), 0, coin.width, coin.height,\n\t\t\tcoin.pos[0], coin.pos[1], coin.width,\n\t\t\tcoin.height\n\t\t);}\n\tfor (var i = 0; i < monsters.length; i++) {\n\t\tctx.drawImage(\n\t\t\tmonsters[i].image,\n\t\t\tmonsters[i].currentSprite(), monsters[i].spriteVertOffset, monsters[i].width, monsters[i].height,\n\t\t\tmonsters[i].pos[0], monsters[i].pos[1], monsters[i].width,\n\t\t\tmonsters[i].height\n\t\t);\n\t}\n\n\t// Score\n\tctx.fillStyle = \"rgb(0, 0, 0)\";\n\tctx.font = \"30px Arial\";\n\tctx.textAlign = \"left\";\n\tctx.textBaseline = \"top\";\n\tctx.fontColor = \"black\";\n\tctx.fillText(\"DEMO\", 10, 32);\n\tctx.fillText(\"arrow keys to move\", 10, 62);\n\tctx.fillText(\"'S': shakes ass\", 10, 92);\n\tctx.fillText(\"Monsters caught: \" + monstersCaught, 10, 132);\n\tctx.fillText(\"Coins: \" + coinsdying, 10, 162);\n\n};\n// Main game loop\nvar main = function () {\n\t// Calculate time since last frame\n\tvar now = Date.now();\n\tvar delta = (now - last);\n\tvar newCoins = coins.slice(0);\n\tfor (var i = 0; i < coins.length; i++) {\n\t\tcoins[i].update(delta);\n\t\tif (coins[i].done) {\n\t\t\tnewCoins.splice(i,1);\n\t\t}\n\tcoins = newCoins;\n\t}\n\thero.update(delta);\n\tfor (var i = 0; i < monsters.length; i++) {\n\t\tmonsters[i].update(delta);\n\t}\n\n\tfor (var i = 0; i < fireballs.length; i++) {\n\t\t\n\t\tfireballs[i].update(delta);\n\t}\n\n\thandleInput(hero, keysDown);\n\tif (hero.newFireball) {\n\t\tif (Date.now() - hero.lastFireball > 1000) {\n\t\t\thero.newFireball = false;\n\t\t\thero.lastFireball = Date.now();\n\t\t\tfireballs.push(new Fireball(\n\t\t\t\t{pos: hero.pos, directionVector: hero.lastDir, boardDimensions: [[332,0],[812,512]]}\n\t\t\t));\n\t\t}\n\t}\n\tlast = now;\n\trender();\n\tvar currMonster;\n\t\t// replace below with collision detection\n\tfor (var i = 0; i < monsters.length; i++) {\n\t\tcurrMonster = monsters[i];\n\n\t\tif (\n\t\t\thero.pos[0] <= (currMonster.pos[0] + 32)\n\t\t\t&& currMonster.pos[0] <= (hero.pos[0] + 32)\n\t\t\t&& hero.pos[1] <= (currMonster.pos[1] + 32)\n\t\t\t&& currMonster.pos[1] <= (hero.pos[1] + 32)\n\t\t) {\n\t\t\t++monstersCaught;\n\t\t\tcurrMonster.sound.play();\n\t\t\tcurrMonster.pos = [(Math.random()*(canvas.width - 312))+312,\n\t\t\t\t(Math.random()*(canvas.height)) ];\n\t\t}\n\t}\n\tfor (var i = 0; i < coins.length; i++) {\n\t\tlet coin = coins[i];\n\t\tif (\n\t\t\thero.pos[0] <= (coin.pos[0] + 32)\n\t\t\t&& coin.pos[0] <= (hero.pos[0] + 32)\n\t\t\t&& hero.pos[1] <= (coin.pos[1] + 32)\n\t\t\t&& coin.pos[1] <= (hero.pos[1] + 32)\n\t\t\t&& (!coin.dying)\n\t\t) {\n\t\t\tcoin.dying = true;\n\t\t\tcoin.sound.play();\n\t\t\t++coinsdying;\n\t\t}\n\t\t}\n\n\n\trequestAnimationFrame(main);\n\n};\n\n// Start the main game loop!\nvar hero = new Hero({name: \"Johnny\", boardDimensions: [[332,0],[812,512]]});\nvar monsters = [];\nvar coins = [];\nvar fireballs = [];\nvar monster = new Monster({pos: [350,200],\n\tboardDimensions: [[332,0],[812,512]]});\nmonsters.push(monster);\nvar monster2 = new Monster2({pos: [550,200],\n\tboardDimensions: [[332,0],[812,512]]});\nmonsters.push(monster2);\nfor (var i = 0; i < 10; i++) {\n\tvar coin = new Coin({ boardDimensions: [[332,0],[812,512]]});\n\tcoin.pos = [(Math.random()*(canvas.width - 312))+312,\n\t\t(Math.random()*(canvas.height)) ];\n\tcoins.push(coin);\n}\nvar last = Date.now();\nvar keysDown = {};\nvar monstersCaught = 0;\nvar coinsdying = 0;\naddEventListener(\"keydown\", function (e) {\n\tkeysDown[e.keyCode] = true;\n}, false);\n\naddEventListener(\"keyup\", function (e) {\n\tif (e.keyCode === 83) {\n\t\thero.directionVector = [0,0];\n\t\thero.animDelay = 200;\n\t\thero.updateDirection();\n\t\thero.shakeAssOff();\n\t}\n\tdelete keysDown[e.keyCode];\n}, false);\nmain();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/game.js\n ** module id = 0\n ** module chunks = 0\n **/","const MOVES = {\n  \"N\"    : [ 0,-1],\n  \"S\"    : [ 0, 1],\n  \"E\"    : [ 1, 0],\n  \"W\"    : [-1, 0],\n  \"NE\"   : [ 1,-1],\n  \"NW\"   : [-1,-1],\n  \"SE\"   : [ 1, 1],\n  \"SW\"   : [-1, 1],\n  \"STOP\" : [ 0, 0]\n};\n\nconst DIAGS = [\"NE\",\"NW\",\"SE\",\"SW\"];\nconst Moveable = require('./moveable.js');\n\nclass Hero extends Moveable {\n  constructor(obj) {\n    super(obj);\n    this.newFireball = false;\n    this.lastFireball = Date.now();\n    this.lastDir = [0,-1];\n    this.name = \"HERO\";\n    this.width = 32;\n    this.height = 32;\n    this.shakingAss = false;\n    this.speed = 200;\n    this.directionVector = [0,0];\n    this.animSet = 4;\n    this.animFrame = 0;\n    this.animNumFrames = 2;\n    this.animDelay = 100;\n    this.animTimer = 0;\n    this.imageReady = false;\n    this.image = new Image();\n    this.image.src =\n    \"./images/hero_sheet.png\";\n    this.image.onload = () => (this.imageReady = true);\n\n    this.spriteVertOffset = 0;\n    this.posCenter();\n    this.updateDirection();\n  }\n\n  move(elapsed) {\n    let newPos = this.pos;\n    var move = (this.speed * (elapsed / 1000));\n    let speedFactor;\n\n    if (DIAGS.includes(this.direction)) { //reduce diag velocity\n      speedFactor = 0.75;\n    } else {\n      speedFactor=1;\n    }\n\n\n    newPos[0] += Math.round(move *  this.directionVector[0]);\n    newPos[1] += Math.round(move * speedFactor * this.directionVector[1]);\n\n    this.pos = newPos;\n    this.preventOutOfBounds();\n  }\n\n  preventOutOfBounds() {\n    let northern = this.boardDimensions[0][1];\n    let western = this.boardDimensions[0][0];\n    let southern = this.boardDimensions[1][1] - this.height;\n    let eastern = this.boardDimensions[1][0] - this.width;\n    this.pos[0] = Math.max(this.pos[0], western);\n    this.pos[0] = Math.min(this.pos[0], eastern);\n    this.pos[1] = Math.max(this.pos[1], northern);\n    this.pos[1] = Math.min(this.pos[1], southern);\n  }\n\n\n  face(dir) {\n    this.directionVector = MOVES[dir];\n    this.updateDirection();\n    this.updateAnimSet();\n  }\n\n  shakeAssOn() {\n    this.shakingAss = true;\n    this.directionVector = [0,0];\n    this.animDelay = 50;\n\n  }\n\n  shakeAssOff() {\n    this.shakingAss = false;\n    this.directionVector = [0,0];\n    this.animSet = 4;\n    this.animDelay = 200;\n\n  }\n  currentSprite() {\n    return (\n      (this.animSet * (this.width * this.animNumFrames)) +\n      (this.animFrame * this.width)\n    );\n  }\n\n  updateAnimSet() {  //should refactor this with a const array\n    let d = this.direction;\n    if (d === \"N\") {\n      this.animSet = 0;\n    } else if (d === \"NE\") {\n      this.animSet = 1;\n    } else if (d === \"E\") {\n      this.animSet = 2;\n    } else if (d===\"SE\") {\n      this.animSet = 3;\n    } else if (d===\"S\" || d===\"STOP\") {\n      this.animSet = 4;\n    } else if (d===\"SW\") {\n      this.animSet = 5;\n    } else if (d===\"W\") {\n      this.animSet = 6;\n    } else if (d===\"NW\") {\n      this.animSet = 7;\n    }\n  }\n\n\n  updateAnim(elapsed) {\n    this.updateDirection();\n    this.animTimer += elapsed;\n    if (this.animTimer >= this.animDelay) {\n      this.animTimer = 0;\n      if (this.direction!==\"STOP\" || this.shakingAss) {\n          ++this.animFrame;\n      if (this.animFrame >= this.animNumFrames) {\n          this.animFrame = 0;\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Hero;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/hero.js\n ** module id = 1\n ** module chunks = 0\n **/","const MOVES = {\n  \"N\"    : [ 0,-1],\n  \"S\"    : [ 0, 1],\n  \"E\"    : [ 1, 0],\n  \"W\"    : [-1, 0],\n  \"NE\"   : [ 1,-1],\n  \"NW\"   : [-1,-1],\n  \"SE\"   : [ 1, 1],\n  \"SW\"   : [-1, 1],\n  \"STOP\" : [ 0, 0]\n};\n\nconst DIAGS = [\"NE\",\"NW\",\"SE\",\"SW\"];\n\nclass Moveable {\n  constructor(obj = {boardDimensions: [[332,0],[812,512]]}) {\n    this.boardDimensions = obj.boardDimensions;\n    this.boardWidth = this.boardDimensions[1][0] - this.boardDimensions[0][0];\n    this.boardHeight = this.boardDimensions[1][1] - this.boardDimensions[0][1];\n\n  }\n\n\n  posCenter() {\n    var xxx = Math.floor((this.boardDimensions[1][0] / 2)\n    + 166 - (this.width / 2));\n    var yyy = Math.floor((this.boardHeight / 2) - (this.width / 2));\n    this.pos = [xxx,yyy];\n  }\n\n\n\n  stop() {\n    if (this.direction !== \"STOP\") {\n    this.lastDir = this.directionVector;}\n    this.directionVector = [0,0];\n    this.updateDirection();\n\n  }\n\n  updateDirection() {\n    let x = this.directionVector[0];\n    let y = this.directionVector[1];\n    Object.keys(MOVES).forEach((key) => {\n      if (MOVES[key][0]===x && MOVES[key][1]===y) {\n        this.direction = key;\n      }\n    });\n\n  }\n\n\n\n  update(elapsed) {\n    this.updateAnim(elapsed);\n    this.move(elapsed);\n\n  }\n\n\n} //end class\n\nmodule.exports = Moveable;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/moveable.js\n ** module id = 2\n ** module chunks = 0\n **/","const handleInput = function (hero, keysDown) {\n\n\t// Stop moving the hero\n\thero.stop();\n\tif (hero.shakingAss) {hero.face(\"N\");}\n\n\n\tif (37 in keysDown) { // Left\n\t\thero.face(\"W\");\n\t}\n\n\tif (38 in keysDown) { // Up\n\t\thero.face(\"N\");\n\t}\n\n\tif (83 in keysDown) { // S\n    hero.shakeAssOn();\n\n\t}\n\n\tif (39 in keysDown) { // Right\n\t\thero.face(\"E\");\n\t}\n\n\tif (40 in keysDown) { // Down\n\t\thero.face(\"S\");\n\t}\n\n\tif (38 in keysDown && 39 in keysDown) { // Up/Right\n\t\thero.face(\"NE\");\n\t}\n\n\tif (38 in keysDown && 37 in keysDown) { // Up/Left\n\t\thero.face(\"NW\");\n\t}\n\n\tif (40 in keysDown && 39 in keysDown) { // Down/Right\n\t\thero.face(\"SE\");\n\t}\n\n\tif (40 in keysDown && 37 in keysDown) { // Down/Left\n\t\thero.face(\"SW\");\n\t}\n\tif (32 in keysDown) { // space\n\t\thero.newFireball = true;\n\t}\n\n\n};\n\nmodule.exports = handleInput;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/handle_input.js\n ** module id = 3\n ** module chunks = 0\n **/","const MOVES = {\n  \"N\"    : [ 0,-1],\n  \"S\"    : [ 0, 1],\n  \"E\"    : [ 1, 0],\n  \"W\"    : [-1, 0],\n  \"NE\"   : [ 1,-1],\n  \"NW\"   : [-1,-1],\n  \"SE\"   : [ 1, 1],\n  \"SW\"   : [-1, 1],\n  \"STOP\" : [ 0, 0]\n};\n\nconst DIAGS = [\"NE\",\"NW\",\"SE\",\"SW\"];\n\nconst Moveable = require('./moveable.js');\n\nclass Monster extends Moveable {\n  constructor(obj) {\n    super(obj);\n    this.pos = obj.pos;\n    this.name = \"MONSTER\";\n    this.width = 32;\n    this.height = 32;\n    this.speed = 200;\n    this.directionVector = [0,1];\n    this.spriteVertOffset = 32;\n    this.animSet = 0;\n    this.animFrame = 0;\n    this.animNumFrames = 3;\n    this.animDelay = 100;\n    this.animTimer = 0;\n    this.imageReady = false;\n    this.image = new Image();\n    this.image.src =\n    \"/Users/Eihcir0/Desktop/my_little_rpg/images/monsters-32x32.png\";\n    this.image.onload = () => (this.imageReady = true);\n    this.sound =\n    new Audio('./images/smb_bowserfire.wav');\n    this.movements = [\"E\",\"E\",\"E\",\"E\",\"E\",\"E\",\"N\", \"N\", \"W\", \"W\", \"W\", \"W\", \"W\", \"W\", \"S\",\"S\",\"S\"];\n    this.currentMovement = 0;\n    this.numMovements = 17;\n    this.updateDirection();\n  }\n\n  face(dir) {\n    this.directionVector = MOVES[dir];\n    this.updateDirection();\n    this.updateAnimSet();\n  }\n\n  currentSprite() {\n    return (\n      (this.animSet * (this.width * this.animNumFrames)) +\n      (this.animFrame * this.width)\n    );\n  }\n  updateAnimSet() {  //should refactor this with a const array\n    let d = this.direction;\n    if (d === \"N\") {\n      this.animSet = 2;\n    } else if (d === \"NE\") {\n      this.animSet = 2;\n    } else if (d === \"E\") {\n      this.animSet = 1;\n    } else if (d===\"SE\") {\n      this.animSet = 0;\n    } else if (d===\"S\" || d===\"STOP\") {\n      this.animSet = 0;\n    } else if (d===\"SW\") {\n      this.animSet = 0;\n    } else if (d===\"W\") {\n      this.animSet = 3;\n    } else if (d===\"NW\") {\n      this.animSet = 2;\n    }\n  }\n\n  move(elapsed) {\n    let newPos = this.pos;\n    var move = (this.speed * (elapsed / 1000));\n    let speedFactor;\n\n    if (DIAGS.includes(this.direction)) { //reduce diag velocity\n      speedFactor = 0.75;\n    } else {\n      speedFactor=1;\n    }\n\n\n    newPos[0] += Math.round(move *  this.directionVector[0]);\n    newPos[1] += Math.round(move * speedFactor * this.directionVector[1]);\n\n    this.pos = newPos;\n    this.preventOutOfBounds();\n  }\n\n  preventOutOfBounds() {\n    let northern = this.boardDimensions[0][1];\n    let western = this.boardDimensions[0][0];\n    let southern = this.boardDimensions[1][1] - this.height;\n    let eastern = this.boardDimensions[1][0] - this.width;\n    this.pos[0] = Math.max(this.pos[0], western);\n    this.pos[0] = Math.min(this.pos[0], eastern);\n    this.pos[1] = Math.max(this.pos[1], northern);\n    this.pos[1] = Math.min(this.pos[1], southern);\n  }\n\n\n  updateAnim(elapsed) {\n    this.updateDirection();\n    this.animTimer += elapsed;\n    if (this.animTimer >= this.animDelay) {\n      this.animTimer = 0;\n      if (this.direction!==\"STOP\" ) {\n          ++this.animFrame;\n          ++this.currentMovement;\n          if (this.currentMovement >= this.numMovements - 1) {\n            this.currentMovement = 0;\n          }\n          this.face(this.movements[this.currentMovement]);\n\n      if (this.animFrame >= this.animNumFrames) {\n          this.animFrame = 0;\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Monster;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/monster.js\n ** module id = 4\n ** module chunks = 0\n **/","const MOVES = {\n  \"N\"    : [ 0,-1],\n  \"S\"    : [ 0, 1],\n  \"E\"    : [ 1, 0],\n  \"W\"    : [-1, 0],\n  \"NE\"   : [ 1,-1],\n  \"NW\"   : [-1,-1],\n  \"SE\"   : [ 1, 1],\n  \"SW\"   : [-1, 1],\n  \"STOP\" : [ 0, 0]\n};\n\nconst DIAGS = [\"NE\",\"NW\",\"SE\",\"SW\"];\n\nconst Moveable = require('./moveable.js');\n\nclass Monster2 extends Moveable {\n  constructor(obj) {\n    super(obj);\n    this.pos = obj.pos;\n    this.name = \"MONSTER2\";\n    this.width = 32;\n    this.height = 32;\n    this.speed = 200;\n    this.spriteVertOffset = 64;\n    this.directionVector = [0,1];\n    this.animSet = 0;\n    this.animFrame = 0;\n    this.animNumFrames = 3;\n    this.animDelay = 100;\n    this.animTimer = 0;\n    this.imageReady = false;\n    this.image = new Image();\n    this.image.src =\n    \"/Users/Eihcir0/Desktop/my_little_rpg/images/monsters-32x32.png\";\n    this.image.onload = () => (this.imageReady = true);\n    this.sound =\n    new Audio('./images/smb_bowserfire.wav');\n    this.movements = [\"S\",\"S\",\"S\",\"S\",\"S\",\"S\",\"E\", \"E\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"W\",\"W\",\"W\"];\n    this.currentMovement = 0;\n    this.numMovements = 17;\n    this.updateDirection();\n  }\n\n  face(dir) {\n    this.directionVector = MOVES[dir];\n    this.updateDirection();\n    this.updateAnimSet();\n  }\n\n  currentSprite() {\n    return (\n      (this.animSet * (this.width * this.animNumFrames)) +\n      (this.animFrame * this.width)\n    );\n  }\n\n  move(elapsed) {\n    let newPos = this.pos;\n    var move = (this.speed * (elapsed / 1000));\n    let speedFactor;\n\n    if (DIAGS.includes(this.direction)) { //reduce diag velocity\n      speedFactor = 0.75;\n    } else {\n      speedFactor=1;\n    }\n\n\n    newPos[0] += Math.round(move *  this.directionVector[0]);\n    newPos[1] += Math.round(move * speedFactor * this.directionVector[1]);\n\n    this.pos = newPos;\n    this.preventOutOfBounds();\n  }\n\n  preventOutOfBounds() {\n    let northern = this.boardDimensions[0][1];\n    let western = this.boardDimensions[0][0];\n    let southern = this.boardDimensions[1][1] - this.height;\n    let eastern = this.boardDimensions[1][0] - this.width;\n    this.pos[0] = Math.max(this.pos[0], western);\n    this.pos[0] = Math.min(this.pos[0], eastern);\n    this.pos[1] = Math.max(this.pos[1], northern);\n    this.pos[1] = Math.min(this.pos[1], southern);\n  }\n\n\n  updateAnimSet() {  //should refactor this with a const array\n    let d = this.direction;\n    if (d === \"N\") {\n      this.animSet = 2;\n    } else if (d === \"NE\") {\n      this.animSet = 2;\n    } else if (d === \"E\") {\n      this.animSet = 1;\n    } else if (d===\"SE\") {\n      this.animSet = 0;\n    } else if (d===\"S\" || d===\"STOP\") {\n      this.animSet = 0;\n    } else if (d===\"SW\") {\n      this.animSet = 0;\n    } else if (d===\"W\") {\n      this.animSet = 3;\n    } else if (d===\"NW\") {\n      this.animSet = 2;\n    }\n  }\n\n\n  updateAnim(elapsed) {\n    this.updateDirection();\n    this.animTimer += elapsed;\n    if (this.animTimer >= this.animDelay) {\n      this.animTimer = 0;\n      if (this.direction!==\"STOP\" ) {\n          ++this.animFrame;\n          ++this.currentMovement;\n          if (this.currentMovement >= this.numMovements - 1) {\n            this.currentMovement = 0;\n          }\n          this.face(this.movements[this.currentMovement]);\n\n      if (this.animFrame >= this.animNumFrames) {\n          this.animFrame = 0;\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Monster2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/monster2.js\n ** module id = 5\n ** module chunks = 0\n **/","const Moveable = require('./moveable.js');\nconst MOVES = {\n  \"N\"    : [ 0,-1],\n  \"S\"    : [ 0, 1],\n  \"E\"    : [ 1, 0],\n  \"W\"    : [-1, 0],\n  \"NE\"   : [ 1,-1],\n  \"NW\"   : [-1,-1],\n  \"SE\"   : [ 1, 1],\n  \"SW\"   : [-1, 1],\n  \"STOP\" : [ 0, 0]\n};\n\nconst DIAGS = [\"NE\",\"NW\",\"SE\",\"SW\"];\n\nclass Coin extends Moveable {\n  constructor(obj) {\n    super(obj);\n    this.width = 32;\n    this.height = 32;\n    this.pos = obj.pos;\n    this.dying = false;\n    this.done = false;\n    this.speed = 0;\n    this.directionVector = [0,0];\n    this.animSet = 0;\n    this.animFrame = 0;\n    this.animNumFrames = 8;\n    this.animDelay = 50;\n    this.animTimer = 0;\n    this.imageReady = false;\n    this.sound =\n    new Audio('./images/smb_1-up.wav');\n    this.image = new Image();\n    this.image.src =\n    \"./images/spinning_coin_gold.png\";\n    this.image.onload = () => (this.imageReady = true);\n  }\n  currentSprite() {\n    return (\n      (this.animSet * (this.width * this.animNumFrames)) +\n      (this.animFrame * this.width)\n    );\n  }\n  updateAnimSet() {  //should refactor this with a const array\n    let d = this.direction;\n    if (d === \"N\") {\n      this.animSet = 2;\n    } else if (d === \"NE\") {\n      this.animSet = 2;\n    } else if (d === \"E\") {\n      this.animSet = 1;\n    } else if (d===\"SE\") {\n      this.animSet = 0;\n    } else if (d===\"S\" || d===\"STOP\") {\n      this.animSet = 0;\n    } else if (d===\"SW\") {\n      this.animSet = 0;\n    } else if (d===\"W\") {\n      this.animSet = 3;\n    } else if (d===\"NW\") {\n      this.animSet = 2;\n    }\n  }\n\n  move(elapsed) {\n    let newPos = this.pos;\n    var move = (this.speed * (elapsed / 1000));\n    let speedFactor;\n\n    if (DIAGS.includes(this.direction)) { //reduce diag velocity\n      speedFactor = 0.75;\n    } else {\n      speedFactor=1;\n    }\n\n\n    newPos[0] += Math.round(move *  this.directionVector[0]);\n    newPos[1] += Math.round(move * speedFactor * this.directionVector[1]);\n\n    this.pos = newPos;\n    this.preventOutOfBounds();\n  }\n\n  preventOutOfBounds() {\n    let northern = this.boardDimensions[0][1];\n    let western = this.boardDimensions[0][0];\n    let southern = this.boardDimensions[1][1] - this.height;\n    let eastern = this.boardDimensions[1][0] - this.width;\n    this.pos[0] = Math.max(this.pos[0], western);\n    this.pos[0] = Math.min(this.pos[0], eastern);\n    this.pos[1] = Math.max(this.pos[1], northern);\n    this.pos[1] = Math.min(this.pos[1], southern);\n  }\n\n\n  updateAnim(elapsed) {\n    if (this.dying) {\n      this.animTimer += elapsed;\n      if (this.animTimer >= this.animDelay) {\n        this.animTimer = 0;\n        ++this.animFrame;\n        this.pos[1] -= 3;\n        if (this.animFrame >= this.animNumFrames) {\n            this.done = true;}\n      }\n    }\n  }\n}\n\nmodule.exports = Coin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coin.js\n ** module id = 6\n ** module chunks = 0\n **/","const MOVES = {\n  \"N\"    : [ 0,-1],\n  \"S\"    : [ 0, 1],\n  \"E\"    : [ 1, 0],\n  \"W\"    : [-1, 0],\n  \"NE\"   : [ 1,-1],\n  \"NW\"   : [-1,-1],\n  \"SE\"   : [ 1, 1],\n  \"SW\"   : [-1, 1],\n  \"STOP\" : [ 0, 0]\n};\n\nconst DIAGS = [\"NE\",\"NW\",\"SE\",\"SW\"];\n\nconst Moveable = require('./moveable.js');\n\nclass Fireball extends Moveable {\n  constructor(obj) {\n    super(obj);\n    this.name = \"FIREBALL\";\n    this.pos = obj.pos;\n    this.width = 64;\n    this.height = 64;\n    this.speed = 500;\n    this.directionVector = obj.directionVector;\n    this.animSet = 0;\n    this.animFrame = 0;\n    this.animNumFrames = 4;\n    this.animDelay = 100;\n    this.animTimer = 0;\n    this.imageReady = false;\n    this.image = new Image();\n    this.image.src =\n    \"./images/fireball_0.png\";\n    this.image.onload = () => (this.imageReady = true);\n    this.done = false;\n\n    this.updateDirection();\n  }\n\n\n  currentSprite() {\n    return (\n      (this.animSet * (this.width * this.animNumFrames)) +\n      (this.animFrame * this.width)\n    );\n  }\n\n  updateAnimSet() {  //should refactor this with a const array\n    let d = this.direction;\n    if (d === \"N\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 2;\n    } else if (d === \"NE\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 3;\n    } else if (d === \"E\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 4;\n    } else if (d===\"SE\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 5;\n    } else if (d===\"S\" || d===\"STOP\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 6;\n    } else if (d===\"SW\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 7;\n    } else if (d===\"W\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 0;\n    } else if (d===\"NW\") {\n      this.animSet = 0;\n      this.spriteVertOffset = 1;\n    }\n  }\n\n\n  updateAnim(elapsed) {\n    this.updateDirection();\n    this.animTimer += elapsed;\n    if (this.animTimer >= this.animDelay) {\n      this.animTimer = 0;\n      if (this.direction!==\"STOP\") {\n          ++this.animFrame;\n      if (this.animFrame >= this.animNumFrames) {\n          this.animFrame = 0;\n        }\n      }\n    }\n  }\n\n  move(elapsed) {\n    let newPos = this.pos;\n    var move = (this.speed * (elapsed / 1000));\n    let speedFactor;\n\n    if (DIAGS.includes(this.direction)) { //reduce diag velocity\n      speedFactor = 0.75;\n    } else {\n      speedFactor=1;\n    }\n\n\n    newPos[0] += Math.round(move *  this.directionVector[0]);\n    newPos[1] += Math.round(move * speedFactor * this.directionVector[1]);\n\n    this.pos = newPos;\n    this.preventOutOfBounds();\n  }\n\n  preventOutOfBounds() {\n    let northern = this.boardDimensions[0][1];\n    let western = this.boardDimensions[0][0];\n    let southern = this.boardDimensions[1][1] - this.height;\n    let eastern = this.boardDimensions[1][0] - this.width;\n    if (this.pos[0] <= western || this.pos[0] >= eastern || this.pos[1] <= northern || this.pos[1] >= southern) {\n      this.done = true;\n    }\n  }\n\n\n}\n\nmodule.exports = Fireball;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/fireball.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}